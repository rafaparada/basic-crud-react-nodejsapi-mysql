{"version":3,"sources":["components/SuccessAlert.js","components/FrutasForm/helpers/getFrutas.js","hooks/useFrutasForm.js","components/FrutasForm/FilaFrutas.js","components/FrutasForm/TablaFrutas.js","components/FrutasForm/Loading.js","components/FrutasForm/helpers/defaultValuesForms.js","components/FrutasForm/FrutasForm.js","index.js"],"names":["SuccessAlert","mensajeReq","className","style","fontSize","getFrutas","a","fetch","request","json","frutas","console","log","useFrutasForm","urlBaseApi","useState","successRequest","setSuccessRequest","fetchFrutas","setFetchFrutas","setMensajeReq","editOn","setEditOn","idToUpdate","setIdToUpdate","isLoading","setIsLoading","getFruitss","setGetFruits","showAlert","setTimeout","useEffect","then","fruits","values","options","method","headers","body","JSON","stringify","res","data","mensaje","Date","now","id","fruit","setValues","fruitToEdit","frutasToUp","resetForm","FilaFrutas","deleteFruit","editFruit","nombre","color","precio","type","onClick","TablaFrutas","map","Loading","role","defaultValuesFrutasForm","myValidation","Yup","shape","required","typeError","positive","FrutasForm","submitForm","submitUpdate","resetFruitForm","initialValues","validationSchema","onSubmit","touched","errors","isSubmitting","htmlFor","name","component","as","value","reactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.2c3d5d67.chunk.js","sourcesContent":["import '../styles/estilos.css';\r\nconst SuccessAlert = ({mensajeReq}) => {\r\n    return (\r\n        <div className=\"alert alert-success alert-dismissible fixed-top center-block text-center myAlert\">\r\n            <i className=\"fas fa-check-circle\"></i> <span style={{fontSize:'18px'}}>{mensajeReq}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SuccessAlert\r\n","const getFrutas = async () =>{\r\n    try{\r\n        const request     = await fetch('https://rafpapp.herokuapp.com/frutas');\r\n        const {frutas}    = await request.json();\r\n        return frutas;\r\n\r\n    }catch(error){\r\n        console.log(error);\r\n    };\r\n}\r\n\r\nexport default getFrutas;","import { useState,useEffect} from \"react\"\r\nimport getFrutas from \"../components/FrutasForm/helpers/getFrutas\";\r\n    const useFrutasForm = () => {\r\n    const urlBaseApi = 'https://rafpapp.herokuapp.com';\r\n    const [successRequest,setSuccessRequest]=useState(false);\r\n    const [fetchFrutas,setFetchFrutas] = useState([]);\r\n    const [mensajeReq,setMensajeReq] = useState('');\r\n    const [editOn,setEditOn] = useState(false);\r\n    const [idToUpdate,setIdToUpdate]=useState(0);\r\n    const [isLoading,setIsLoading] = useState(false);\r\n    const [getFruitss,setGetFruits] = useState(0);\r\n    \r\n    const showAlert = () =>{\r\n        setSuccessRequest(true);\r\n        setTimeout(() => {setSuccessRequest(false)}, 1500);\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        setIsLoading(true);\r\n        getFrutas().then(fruits=>{\r\n            setFetchFrutas(fruits)\r\n            setIsLoading(false);\r\n        });\r\n    },[getFruitss]);\r\n    \r\n    const submitForm =  async(values) =>{\r\n        const options = {\r\n            method:'POST',\r\n            headers:{'Content-Type': 'application/json'},\r\n            body:JSON.stringify(values)\r\n        };\r\n        setIsLoading(true);\r\n        const res     = await fetch(urlBaseApi+'/crear',options);\r\n        const data    = await res.json();\r\n        showAlert();\r\n        setMensajeReq(data.mensaje);\r\n        setIsLoading(false);\r\n        setGetFruits(Date.now());\r\n    }\r\n\r\n    const deleteFruit = async(id) =>{\r\n        try{\r\n            const options = {method:'DELETE'};\r\n            setIsLoading(true);\r\n            const request = await fetch(urlBaseApi+'/delete/'+id,options);\r\n            const res     = await request.json();\r\n            showAlert();\r\n            setMensajeReq(res.mensaje);\r\n            setIsLoading(false);\r\n            setGetFruits(Date.now());\r\n        }catch(error){\r\n            console.log(error);\r\n        }\r\n    }\r\n    \r\n\r\n    const editFruit = (id,fruit,setValues) =>{\r\n        const fruitToEdit = {...fruit};\r\n        delete fruitToEdit.id;\r\n        setEditOn(true);\r\n        setIdToUpdate(id);\r\n        setValues(fruitToEdit);\r\n    }\r\n\r\n    const submitUpdate = async(values)=>{\r\n        const frutasToUp = {...values,id:idToUpdate};\r\n        const options    = {method:'PUT',headers:{'Content-type':'application/json'},body:JSON.stringify(frutasToUp)};\r\n        setIsLoading(true);\r\n        const request    = await fetch(urlBaseApi+'/update',options);\r\n        const res        = await request.json();\r\n        setMensajeReq(res.mensaje);\r\n        setEditOn(false);\r\n        setIdToUpdate(0);\r\n        showAlert();\r\n        setIsLoading(false);\r\n        setGetFruits(Date.now());\r\n    }\r\n\r\n    const resetFruitForm = (resetForm) =>{\r\n        setEditOn(false);\r\n        resetForm();\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return [submitForm,successRequest,fetchFrutas,deleteFruit,mensajeReq,editFruit,editOn,submitUpdate,isLoading,resetFruitForm]\r\n    //Estaba enviando setFrutas y no lo utilizo en el componente, eso causaba un error que no podia encontrar\r\n    //No enviar cosas que no se van utilizar\r\n}\r\n\r\nexport default useFrutasForm\r\n","const FilaFrutas = ({fruit,deleteFruit,editFruit,setValues}) =>{\r\n    const {id,nombre,color,precio} = fruit;\r\n    return(\r\n        <tr><td>{nombre}</td><td>{color}</td><td>{precio}</td><td><button type=\"button\" onClick={()=>deleteFruit(id)} className=\"btn btn-danger btn-sm\"><i className=\"fas fa-trash\"></i></button><button type=\"button\" onClick={()=>editFruit(id,fruit,setValues)} className=\"btn btn-danger btn-sm ms-1\"><i className=\"fas fa-edit\"></i></button></td></tr>\r\n    );\r\n}\r\n\r\nexport default FilaFrutas;","import FilaFrutas from \"./FilaFrutas\"\r\nconst TablaFrutas = ({fetchFrutas,deleteFruit,editFruit,setValues}) =>{\r\n\r\n      return(\r\n            <table className=\"table table-dark table-striped\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>FRUTA</th>\r\n                        <th>COLOR</th>\r\n                        <th>PRECIO</th>\r\n                        <th>ACCIONES</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        fetchFrutas.map(fruit=>(\r\n                            <FilaFrutas key={fruit.id} fruit={fruit} deleteFruit={deleteFruit} editFruit={editFruit} setValues={setValues} />\r\n                        ))\r\n                    }\r\n                </tbody>\r\n            </table>\r\n      );\r\n}\r\nexport default TablaFrutas;","const Loading = () =>{\r\n    return(\r\n        <div className=\"d-flex text-center align-items-center myLoading\">\r\n            <div className=\"spinner-border text-primary tamano\" role=\"status\">\r\n                <span className=\"visually-hidden\"></span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loading;","\r\nexport const defaultValuesFrutasForm = {\r\n    nombre:'',\r\n    color:'',\r\n    precio:''\r\n}\r\n","import {Formik,Form,Field,ErrorMessage} from \"formik\";\r\nimport SuccessAlert from \"../SuccessAlert\";\r\nimport useFrutasForm from \"../../hooks/useFrutasForm\"\r\nimport TablaFrutas from \"./TablaFrutas\";\r\nimport Loading from './Loading';\r\nimport { defaultValuesFrutasForm } from \"./helpers/defaultValuesForms\";\r\nimport * as Yup from 'yup';\r\nconst myValidation = Yup.object().shape({\r\n    nombre:Yup.string().required('Ingrese el nombre de la fruta papu'),\r\n    color:Yup.string().required('Seleccione el color papu'),\r\n    precio:Yup.number().typeError('El precio debe ser numérico').positive('El precio debe ser positivo').required('Ingrese el Precio'),\r\n});\r\nconst FrutasForm = () => {\r\n    const [submitForm,successRequest,fetchFrutas,deleteFruit,mensajeReq,editFruit,editOn,submitUpdate,isLoading,resetFruitForm] = useFrutasForm();\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            {isLoading && <Loading />}\r\n            {successRequest ? <SuccessAlert mensajeReq={mensajeReq} />:''}\r\n            <div className=\"row\">\r\n                <div className=\"col-3\"></div>\r\n                <div className=\"col-6 mt-3\">\r\n                    <h5>{editOn ? 'MODIFICAR FRUTA':' REGISTRAR FRUTA'}</h5>\r\n                    <hr />\r\n\r\n                    <Formik \r\n                        initialValues = {defaultValuesFrutasForm}\r\n                        validationSchema = {myValidation}\r\n                        onSubmit = {(values,{resetForm})=>{\r\n                           editOn ? submitUpdate(values) : submitForm(values);\r\n                           resetForm();\r\n                        }}\r\n                    >    \r\n                        {({ touched, errors, isSubmitting,setValues,resetForm}) => {\r\n                            return( \r\n                                <Form>\r\n                                    <label htmlFor=\"nombre\">Fruta:</label>\r\n                                    <Field id=\"nombre\" name=\"nombre\" className=\"form-control\" />\r\n                                    {(errors.nombre && touched.nombre) && <ErrorMessage name=\"nombre\" component=\"div\" className=\"alert alert-warning\" />}\r\n                                    <label htmlFor=\"color\">Color:</label>\r\n                                    <Field id=\"color\" name=\"color\" as=\"select\" className=\"form-select\">\r\n                                        <option value=\"\">Seleccione</option>\r\n                                        <option value=\"Rojo\">Rojo</option>\r\n                                        <option value=\"Amarillo\">Amarillo</option>\r\n                                        <option value=\"Blanco\">Blanco</option>\r\n                                        <option value=\"Azul\">Azul</option>\r\n                                        <option value=\"Verde\">Verde</option>\r\n                                        <option value=\"Negro\">Negro</option>\r\n                                        <option value=\"Anaranjado\">Anaranjado</option>\r\n                                    </Field>\r\n                                    {(errors.color && touched.precio) && <ErrorMessage name=\"color\" component=\"div\" className=\"alert alert-warning\"/> }\r\n                                    <label htmlFor=\"precio\">Precio:</label> \r\n                                    <Field id=\"precio\" name=\"precio\" className=\"form-control\" />\r\n                                    {(errors.precio && touched.precio) &&  <ErrorMessage name=\"precio\" component=\"div\" className=\"alert alert-warning\"/>}\r\n                                    <button type=\"submit\" className=\"btn btn-primary mt-3\">{editOn ? \"Guardar cambios\":\"Registrar\"}</button>\r\n                                     {editOn && <button type=\"button\" className=\"btn btn-danger mt-3 ms-3\" onClick={()=>resetFruitForm(resetForm)}>Cancelar</button>}\r\n                                    <hr />\r\n                                    <TablaFrutas fetchFrutas={fetchFrutas} deleteFruit={deleteFruit} editFruit={editFruit} setValues={setValues} />\r\n                                </Form>\r\n                            );\r\n                        }\r\n                    }\r\n                    </Formik>\r\n                </div>\r\n                <div className=\"col-3\"></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FrutasForm\r\n","import reactDom from 'react-dom';\r\nimport FrutasForm from './components/FrutasForm/FrutasForm';\r\nreactDom.render(\r\n    <FrutasForm />,\r\n    document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}